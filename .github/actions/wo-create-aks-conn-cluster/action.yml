name: Create aks connected cluster 
description: Create a workload-orchestration ready AKS cluster
inputs:
  site:
    description: Site name, e.g., austin, boston, etc.
    required: true
  rg:
    description: RG to be used for AKS cluster
    required: true

runs:
  using: "composite"
  steps:

    - name: source site info
      id: siteinfo
      uses: ./.github/actions/wo-get-site-info
      with:
        site: ${{ inputs.site }}
        rg: ${{ inputs.rg }}

    - name: create aks cluster
      id: checkaks     
      shell: bash
      run: |

        akscls="false"
        echo "check if cluster already exists "
        aksName=$(az aks show --resource-group "${{ steps.siteinfo.outputs.rg }}" --name "${{ steps.siteinfo.outputs.siteClsName }}" \
                              --subscription "${{ steps.siteinfo.outputs.subId }}" --query name -o tsv 2>&1) || true
        echo "aksName is : $aksName"

        if [[ "$aksName" == "${{ steps.siteinfo.outputs.siteClsName }}" ]]; then
          echo " cluster $aksName already exists. nothing to do."
          akscls="true"
        fi

        echo "akscls=$akscls" >> $GITHUB_OUTPUT

    - name: create cluster identity
      if: ${{ steps.checkaks.outputs.akscls == 'false' }}
      id: clsid
      shell: bash
      run: |
        echo "CREATE AKS CLUSTER IDENTITY"
        az identity create --resource-group ${{ steps.siteinfo.outputs.rg }} --name ${{ steps.siteinfo.outputs.siteClsId }} --subscription ${{ steps.siteinfo.outputs.subId }}
        echo "clusterIdentity=$(az identity show --resource-group ${{ steps.siteinfo.outputs.rg }} --name ${{ steps.siteinfo.outputs.siteClsId }} \
                                                 --subscription ${{ steps.siteinfo.outputs.subId }} --query id --output tsv)" >> $GITHUB_OUTPUT

    - name: Create AKS cluster
      if: ${{ steps.checkaks.outputs.akscls == 'false' }}
      id: createaks
      shell: bash
      run: |
        echo " "
        echo "CREATE AKS CLUSTER "
        az aks create --resource-group ${{ steps.siteinfo.outputs.rg }} --location ${{ steps.siteinfo.outputs.siteLoc }}  \
                      --name ${{ steps.siteinfo.outputs.siteClsName }} --node-count 2 --node-vm-size Standard_D2s_v5 \
                      --assign-identity ${{ steps.clsid.outputs.clusterIdentity }} --generate-ssh-keys --subscription ${{ steps.siteinfo.outputs.subId }}

    - name: Get AKS Credentials
      if: ${{ steps.checkaks.outputs.akscls == 'false' }}
      uses: Azure/aks-set-context@v3
      with:
        resource-group: ${{ steps.siteinfo.outputs.rg }}
        cluster-name: ${{ steps.siteinfo.outputs.siteClsName }}

    - name: get cluster context and arc connect cluster
      if: ${{ steps.checkaks.outputs.akscls == 'false' }}
      id: connectedcluster
      shell: bash
      run: |
        echo " "
        echo "ARC-CONNECTED AKS CLUSTER "
        kubectl config current-context
        az aks get-credentials --resource-group ${{ steps.siteinfo.outputs.rg }} --name ${{ steps.siteinfo.outputs.siteClsName }} \
                               --subscription ${{ steps.siteinfo.outputs.subId }} --overwrite-existing
        kubectl config use-context ${{ steps.siteinfo.outputs.siteClsName }}
        az connectedk8s connect --resource-group ${{ steps.siteinfo.outputs.rg }} --location "${{ steps.siteinfo.outputs.siteLoc }}" \
                                --subscription ${{ steps.siteinfo.outputs.subId }} --name ${{ steps.siteinfo.outputs.siteClsName }}
        az connectedk8s enable-features --resource-group ${{ steps.siteinfo.outputs.rg }} --name ${{ steps.siteinfo.outputs.siteClsName }} \
                                        --subscription ${{ steps.siteinfo.outputs.subId }} --features cluster-connect custom-locations
        echo
        echo "arc connected aks cluster successfully created"
