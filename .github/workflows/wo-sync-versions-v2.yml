# A workflow to sync wo artifacts with Helm chart version

name: WO-SYNC-VERSIONS-V2

on:
  push:
    branches:
      - main
    paths: 
      - '.pg/apps/**/helm/Chart.yaml'

permissions:
  id-token: write
  contents: write

jobs:    

  sync-versions:
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    env:
      cmdinput: ${{ github.event.inputs.commands }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout 
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 2
      
    - name: Azure Setup
      id: azsetup
      uses: ./.github/actions/wo-azure-setup
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        azcliversion: "latest"
   
    - name: yq
      uses: mikefarah/yq@3.3.0  

    - name: Get changes
      id: changed-files
      run: |
        echo "changedfiles=$(git diff --name-only HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT

    - name: Evaluate changed files and make updates
      run: |
        for file in ${{ steps.changed-files.outputs.changedfiles }}; do

          fileDir=$(awk '{"dirname " $0 | getline dir; print dir}' <<< $file)
          fileName=$(awk -F / '{print $(NF)}' <<< $file)
         
          echo "In process: $file"
          if [[ $fileName == "Chart.yaml" ]]; then
            yq eval $file >> /dev/null
       
            # extract version from Helm chart
            updVer=$(yq '.version' $file)

            baseDir=$PWD
            cd $fileDir

            export updVer

            # update schema (create version dir if needed)
            cd ../workload-orchestration/schemas
            mkdir updVer
            cd updVer
            cp ../*-schema.yaml .
            yq -i '.metadata.version = env(updVer)' *-schema.yaml
        
            # update solution template (create version fir if required)
            cd ../../solution-templates
            mkdir updVer
            cd updVer
            cp ../*-solution-template.yaml .
            yq -i '.metadata.version = env(updVer)' *-template.yaml
            
            # update specs
            cp ../*-specs.yaml .
            yq -i '.components[].properties.chart.version = env(updVer)' *-specs.json

            cd $baseDir

          fi
        done

    - name: Commit changes
      uses: stefanzweifel/git-auto-commit-action@v5
